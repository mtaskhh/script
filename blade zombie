local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "blade zombie Script",
    Icon = "crown",
    Author = "by--Mtaskh",
    Folder = "blade zombie",
    Size = UDim2.fromOffset(750, 650),
    Theme = "Dark",
})

local Tab = Window:Tab({
    Title = "主页面",
    Icon = "code"
})

local currentWalkSpeed = 16
local currentJumpPower = 50

local SpeedSlider = Tab:Slider({
    Title = "移动速度",
    Step = 1,
    Value = {
        Min = 0,
        Max = 200,
        Default = 16,
    },
    Callback = function(value)
        currentWalkSpeed = value
    end
})

-- 循环保护速度值
local speedProtection
speedProtection = game:GetService("RunService").Heartbeat:Connect(function()
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.WalkSpeed ~= currentWalkSpeed then
            humanoid.WalkSpeed = currentWalkSpeed
        end
    end
end)

local JumpSlider = Tab:Slider({
    Title = "跳跃高度",
    Step = 1,
    Value = {
        Min = 0,
        Max = 200,
        Default = 50,
    },
    Callback = function(value)
        currentJumpPower = value
        local character = game.Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = value
            end
        end
    end
})

game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = currentWalkSpeed
    humanoid.JumpPower = currentJumpPower
end)

local Button = Tab:Button({
    Title = "自动杀戮",
    Desc = "挂机",
    Callback = function()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local RunService = game:GetService("RunService")
        local Workspace = game:GetService("Workspace")

        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")

        local SkillRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("RequestSkillEvent")
        local SwingRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("RequestSwing")

        local skillConnection
        skillConnection = RunService.Heartbeat:Connect(function()
            for i = 1, 2 do
                local skillArgs = {[1] = "Skill_" .. i}
                SkillRemote:FireServer(unpack(skillArgs))
            end
            
            local swingArgs = {
                [1] = {
                    ["clientTime"] = tick(),
                    ["originCFrame"] = rootPart and rootPart.CFrame or CFrame.new(106.31342315673828, 11.930233001708984, -244.49610900878906)
                }
            }
            SwingRemote:FireServer(unpack(swingArgs))
        end)

        local function findNPC()
            if not Workspace:FindFirstChild("Enemies") then
                return nil
            end
            
            for _, model in pairs(Workspace.Enemies:GetChildren()) do
                if model:IsA("Model") and string.sub(model.Name, 1, 3):lower() == "npc" then
                    local humanoid = model:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.Health > 0 then
                        return model, humanoid
                    end
                end
            end
            return nil
        end

        local currentNPC, currentHumanoid
        local tpConnection

        tpConnection = RunService.Heartbeat:Connect(function()
            if not character or not character.Parent or not rootPart or not rootPart.Parent then
                return
            end
            
            if not currentNPC or not currentNPC.Parent or not currentHumanoid or currentHumanoid.Health <= 0 then
                currentNPC, currentHumanoid = findNPC()
                if not currentNPC then
                    return
                end
            end
            
            local npcRoot = currentNPC:FindFirstChild("HumanoidRootPart") or currentNPC:FindFirstChild("Head")
            if npcRoot then
                local npcPosition = npcRoot.Position
                rootPart.CFrame = CFrame.new(npcPosition.X, npcPosition.Y + 9, npcPosition.Z)
            end
        end)

        player.CharacterAdded:Connect(function(newChar)
            character = newChar
            rootPart = character:WaitForChild("HumanoidRootPart")
            currentNPC, currentHumanoid = nil, nil
        end)

        game:GetService("UserInputService").WindowFocusReleased:Connect(function()
            if skillConnection then
                skillConnection:Disconnect()
            end
            if tpConnection then
                tpConnection:Disconnect()
            end
        end)
    end
})

WindUI:Notify({
    Title = "脚本加载完成",
    Content = "Mtaskh脚本已成功加载！", 
    Duration = 5,
})
